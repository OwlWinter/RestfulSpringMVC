<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 配置数据库相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:db.properties" />
    <!--配置c3p0连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--配置sqlSqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--mybatis 配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- 当mybatis的xml文件和mapper接口不在相同包下时，需要用mapperLocations属性指定xml文件的路径。
                 *是个通配符，代表所有的文件，**代表所有目录下 -->
        <!--
        classpath 和 classpath* 区别：
        classpath：只会到class路径中查找找文件;
        classpath*：不仅包含class路径，还包括jar文件中(class路径)进行查找。
        优先级: lib>classes
        -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        
        <property name="typeAliasesPackage" value="cn.mogeek.model"></property>
    </bean>

    <!--
        spring与mybatis整合配置，动态实现 mapper 接口，注入到 spring 容器中
        1).注入sqlSessionFactory
        2).给出需要扫描 mapper 接口包
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <property name="basePackage" value="cn.mogeek.mapper"></property>
    </bean>

    <!-- 对数据源进行事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

</beans>